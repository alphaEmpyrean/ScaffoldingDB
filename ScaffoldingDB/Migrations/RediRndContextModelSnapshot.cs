// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScaffoldingDB.Data;

#nullable disable

namespace ScaffoldingDB.Migrations
{
    [DbContext(typeof(RediRndContext))]
    partial class RediRndContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScaffoldingDB.Entities.Container", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("LocalStake")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 17)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<decimal?>("Stake")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 17)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Weight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id")
                        .HasName("PK__Containe__3214EC2708AE6587");

                    b.HasIndex(new[] { "Name" }, "IX_Container_Name");

                    b.HasIndex(new[] { "ParentId" }, "IX_Container_ParentID");

                    b.ToTable("Container", (string)null);
                });

            modelBuilder.Entity("ScaffoldingDB.Entities.ContainerMembership", b =>
                {
                    b.Property<int>("ContainerId")
                        .HasColumnType("int")
                        .HasColumnName("ContainerID");

                    b.Property<int>("StakerId")
                        .HasColumnType("int")
                        .HasColumnName("StakerID");

                    b.Property<decimal?>("LocalStake")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 17)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Weight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ContainerId", "StakerId")
                        .HasName("PK__Containe__5D8C1B7B0678ED0E");

                    b.HasIndex(new[] { "StakerId" }, "IX_ContainerMembership_StakerID");

                    b.ToTable("ContainerMembership", (string)null);
                });

            modelBuilder.Entity("ScaffoldingDB.Entities.Staker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Staker__3214EC278ADB90EC");

                    b.ToTable("Staker", (string)null);
                });

            modelBuilder.Entity("ScaffoldingDB.Entities.StakerDailyStake", b =>
                {
                    b.Property<int>("StakerId")
                        .HasColumnType("int")
                        .HasColumnName("StakerID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<decimal?>("Stake")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 17)")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("StakerId", "Date")
                        .HasName("PK__StakerDa__982439D490A019AD");

                    b.HasIndex(new[] { "Date" }, "IX_StakerDailyStake_Date");

                    b.ToTable("StakerDailyStake", (string)null);
                });

            modelBuilder.Entity("ScaffoldingDB.Entities.Container", b =>
                {
                    b.HasOne("ScaffoldingDB.Entities.Container", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__Container__Paren__398D8EEE");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ScaffoldingDB.Entities.ContainerMembership", b =>
                {
                    b.HasOne("ScaffoldingDB.Entities.Container", "Container")
                        .WithMany("ContainerMemberships")
                        .HasForeignKey("ContainerId")
                        .IsRequired()
                        .HasConstraintName("FK__Container__Conta__412EB0B6");

                    b.HasOne("ScaffoldingDB.Entities.Staker", "Staker")
                        .WithMany("ContainerMemberships")
                        .HasForeignKey("StakerId")
                        .IsRequired()
                        .HasConstraintName("FK__Container__Stake__4222D4EF");

                    b.Navigation("Container");

                    b.Navigation("Staker");
                });

            modelBuilder.Entity("ScaffoldingDB.Entities.StakerDailyStake", b =>
                {
                    b.HasOne("ScaffoldingDB.Entities.Staker", "Staker")
                        .WithMany("StakerDailyStakes")
                        .HasForeignKey("StakerId")
                        .IsRequired()
                        .HasConstraintName("FK__StakerDai__Stake__47DBAE45");

                    b.Navigation("Staker");
                });

            modelBuilder.Entity("ScaffoldingDB.Entities.Container", b =>
                {
                    b.Navigation("ContainerMemberships");

                    b.Navigation("InverseParent");
                });

            modelBuilder.Entity("ScaffoldingDB.Entities.Staker", b =>
                {
                    b.Navigation("ContainerMemberships");

                    b.Navigation("StakerDailyStakes");
                });
#pragma warning restore 612, 618
        }
    }
}
